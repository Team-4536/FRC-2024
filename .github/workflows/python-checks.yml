name: MinuteBots RobotPy Readiness

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read
  pull-requests: write

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
    - uses: actions/checkout@v3
    - name: list-comments
      uses: actions/github-script@v7
      with:
        script: |
          let res = await github.rest.issues.listComments({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo
          });
          for (let c of res.data) {
            console.log("user.type:", c.user.type);
            console.log("user.name:", c.user.name);
            console.log("user.login:", c.user.login);
            console.log("user.id:", c.user.id);
            if (c.user.login == 'github-actions[bot]') {
              github.rest.issues.deleteComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: c.id
              });
            }
          }
    - name: add-a-comment
      id: add-a-comment
      uses: actions/github-script@v7
      with:
        script: |
          console.log(context.issue.number);
          console.log(context.repo.owner);
          console.log(context.repo.repo);
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: "comment from action"
          })
    - name: Set up Python 3.11
      uses: actions/setup-python@v3
      with:
        python-version: "3.11"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest black
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        if [ -f Pipfile ]; then pip install pipenv && pipenv install --system; fi
    - name: Check format with black
      run: |
        black --check --diff src || :
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 src --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 src --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        (cd src && robotpy test -- --log-cli-level=debug)
